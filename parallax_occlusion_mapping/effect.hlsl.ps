// using row_major
#pragma pack_matrix(row_major)

#include "lordaeron/effect/lighting.hlsl"

struct VsOutput {
  float4 position:SV_POSITION;
  float3 worldpos: WPOS;
  float3 normal:NORMAL;
  float3 viewin: VIEWIN;
  float2 texcoord: TEXCOORD0;
};

cbuffer c_buffer {
   DirLight   dirlight;
   PointLight pointlight;
   SpotLight  spotlight;
   float      ambient_scalar_;
   float      specular_scalar_;
};

Texture2D diffuse_map_;
SamplerState diffuse_sampler;

float4 ps_main(VsOutput o):SV_TARGET {
  float color = diffuse_map_.Sample(diffuse_sampler, o.texcoord);
  Matrial mtrl;
  mtrl.ambient = ambient_scalar_ * color;
  mtrl.specular = specular * color;
  mtrl.diffuse = color;
  mtrl.emission = float4(0.0f, 0.0f, 0.0f, 0.0f);
  mtrl.power = 4;
  mtrl.alpha = 1.0f;

  float3 dir_color = CalcDirLightColor(dirlight, o.normal, o.viewin, mtrl);
  float3 point_color = CalcPointLightColor(pointlight, o.worldpos,
                                           o.normal, o.viewin, mtrl);
  float3 spot_color = CalcSpotLightColor(spotlight, o.worldpos,
                                         o.normal, o.viewin, mtrl);
  return float4(spot_color + dir_color + point_color, mtrl.alpha);
}
